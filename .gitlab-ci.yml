image: stackstate/stackstate-agent-integrations-runner:latest

stages:
  - build
  - test

before_script:
  - source .gitlab-scripts/setup_env.sh

deps:
  stage: build
  cache:
    key: "stackstate-agent-integrations-build-cache"
    paths:
      - venv
  script:
    - source $CI_PROJECT_DIR/.gitlab-scripts/load_deps.sh
  artifacts:
    paths:
      - venv
    expire_in: 1 week

clear-caches:
  cache:
    policy: push
    key: "stackstate-agent-integrations-build-cache"
    paths:
      - venv
  when: manual
  stage: build
  before_script: []
  script:
    - rm -rf venv || true

.test: &test
  stage: test
  script:
    - stsdev test --cov ${CHECK}
    - stsdev test ${CHECK} --bench || true
      # [BS] we skip this until https://github.com/PyCQA/pylint/pull/2681/commits/253e5d05e3943d3bc8e4470804a138cb20049548 lands in pylint stable version
      # - if [ -n "$PYTHON3" ]; then stsdev validate py3 ${CHECK}; fi

test_stackstate_checks_base:
  stage: test
  variables:
    CHECK: "stackstate_checks_base"
    PYTHON3: "true"
  script:
    - stsdev validate config
    - stsdev validate dep
    - stsdev validate manifest --include-extras
    - stsdev validate metadata
    - stsdev validate service-checks
    - stsdev test --cov ${CHECK}
    - stsdev test ${CHECK} --bench || true

test_stackstate_checks_dev:
  variables:
    CHECK: "stackstate_checks_dev"
    PYTHON3: "true"
  <<: *test

test_mysql:
  variables:
    CHECK: "mysql"
    PYTHON3: "true"
  <<: *test

test_postgres:
  variables:
    CHECK: "postgres"
    PYTHON3: "true"
  <<: *test

