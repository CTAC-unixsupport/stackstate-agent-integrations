image: stackstate/stackstate-agent-integrations-runner:latest

stages:
  - build
  - test

.linux_env: &linux_env
  before_script:
    - source .gitlab-scripts/setup_env.sh
    - source .gitlab-scripts/set_docker_host_ip.sh

.windows_env: &windows_env
  tags:
    - sts_windows
  before_script:
    - call .gitlab-scripts/windows_setup_env.cmd

linux_deps:
  stage: build
  cache:
    key: "stackstate-agent-integrations-build-cache"
    paths:
      - venv
  script:
    - source $CI_PROJECT_DIR/.gitlab-scripts/load_deps.sh
  artifacts:
    paths:
      - venv
    expire_in: 1 week
  <<: *linux_env

win_deps:
  stage: build
  cache:
    key: "stackstate-agent-integrations-windows-build-cache"
    paths:
      - venv
  script:
    - call .gitlab-scripts/windows_load_env.cmd
  artifacts:
    paths:
      - venv
    expire_in: 1 week
  <<: *windows_env

clear-caches:
  cache:
    policy: push
    key: "stackstate-agent-integrations-build-cache"
    paths:
      - venv
  when: manual
  stage: build
  script:
    - rm -rf venv || true

clear-win-caches:
  cache:
    policy: push
    key: "stackstate-agent-integrations-windows-build-cache"
    paths:
      - venv
  when: manual
  stage: build
  script:
    - "if exist %WIN_CI_PROJECT_DIR%\\venv rd /s/q %WIN_CI_PROJECT_DIR%\\venv"
  tags:
    - sts_windows

.linux_test: &linux_test
  stage: test
  dependencies:
    - linux_deps
  script:
    - stsdev test --cov ${CHECK}
    - stsdev test ${CHECK} --bench || true
      # [BS] we skip this until https://github.com/PyCQA/pylint/pull/2681/commits/253e5d05e3943d3bc8e4470804a138cb20049548 lands in pylint stable version
      # - if [ -n "$PYTHON3" ]; then stsdev validate py3 ${CHECK}; fi
  <<: *linux_env

test_stackstate_checks_base:
  stage: test
  dependencies:
    - deps
  variables:
    CHECK: "stackstate_checks_base"
    PYTHON3: "true"
  script:
    - stsdev validate config
    - stsdev validate dep
    - stsdev validate manifest --include-extras
    - stsdev validate metadata
    - stsdev validate service-checks
    - stsdev test --cov ${CHECK}
    - stsdev test ${CHECK} --bench || true
  <<: *linux_test

test_stackstate_checks_dev:
  variables:
    CHECK: "stackstate_checks_dev"
    PYTHON3: "true"
  <<: *linux_test

test_mysql:
  variables:
    CHECK: "mysql"
    PYTHON3: "true"
  <<: *linux_test

test_postgres:
  variables:
    CHECK: "postgres"
    PYTHON3: "true"
  <<: *linux_test

.windows_test: &windows_test
  stage: test
  dependencies:
    - win_deps
  script:
    - stsdev test -c ${CHECK}
  tags:
    - sts_windows
  <<: *windows_env

test_stackstate_checks_dev_win:
  variables:
    CHECK: "stackstate_checks_dev"
  <<: *windows_test

test_stackstate_checks_base_win:
  variables:
    CHECK: "stackstate_checks_base"
  <<: *windows_test

test_wmi_check:
  variables:
    CHECK: "wmi_check"
  <<: *windows_test
